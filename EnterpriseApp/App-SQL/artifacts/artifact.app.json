{
    "kind": "template",
    "id": "/providers/Microsoft.Blueprint/blueprints/app_blueprint/artifacts/app_blueprint",
    "type": "Microsoft.Blueprint/blueprints/artifacts",
    "name": "app_blueprint",
    "properties": {
        "resourceGroup": "projectResourceGroup",
        "displayName": "Azure App Service template",
        "description": "An artifact to deploy Azure App service",
        "template": {
            "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
            "contentVersion": "1.0.0.0",
            "parameters": {
                "resourceTags": {
                    "type": "object",
                    "defaultValue": {
                        "CostCenter": "",
                        "Owner": ""
                    },
                    "metadata": {
                        "displayName": "Global resource tag that follows Azure governance"
                    }
                },
                "projectCode": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 5,
                    "metadata": {
                        "displayName": "Project Code (e.g. AGS), must be unique"
                    }
                },
                "projectStage": {
                    "type": "string",
                    "minLength": 3,
                    "maxLength": 5,
                    "defaultValue": "dev",
                    "allowedValues": [
                        "prod",
                        "dev",
                        "test",
                        "uat"
                    ],
                    "metadata": {
                        "displayName": "Project Stage",
                        "description": "Specify project stage"
                    }
                },
                "location": {
                    "type": "string",
                    "defaultValue": "[resourceGroup().location]",
                    "metadata": {
                        "displayName": "Location for all resources."
                    }
                },
                "appName": {
                    "type": "string",
                    "metadata": {
                        "description": "The name of your Web App"
                    }
                },
                "appServiceSkuName": {
                    "type": "string",
                    "allowedValues": [
                        "B1",
                        "B2",
                        "B3",
                        "S1",
                        "S2",
                        "S3",
                        "P1V2",
                        "P2v2",
                        "P3v2"
                    ],
                    "metadata": {
                        "description": "Select an App Service Plan. Note that all B (Basic) plan doesn't support Daily Backup"
                    }
                },
                "appServiceSkuCapacity": {
                    "type": "int",
                    "minValue": 1,
                    "maxValue": 10,
                    "metadata": {
                        "description": "Specify number of instance. Different App Service Plan have different support limit."
                    }
                },
                "sqlAdminUser": {
                    "type": "string",
                    "metadata": {
                        "description": "The administrator username of the managed SQL logical server"
                    }
                },
                "sqlAdminPassword": {
                    "type": "string",
                    "metadata": {
                        "description": "The administrator's password of the managed SQL logical server"
                    }
                }
            },
            "variables": {
                "customTag": {
                    "ProjectCode": "[parameters('projectCode')]",
                    "Environemnt": "[parameters('projectStage')]"
                },
                "storageAccountName": "[concat('sqlaudit', uniquestring(resourceGroup().id))]",
                "hostPlaningName": "[concat(parameters('projectCode'), '-',parameters('projectStage'), '-', parameters('location'))]",
                "websiteName": "[concat(parameters('projectCode'),'-',parameters('appName'), '-', parameters('projectStage'), '-',parameters('location'))]",
                "sqlServerName": "[concat(parameters('projectCode'),'-','sqlsrv-',parameters('projectStage'),'-',parameters('location'))]",
                "dbName": "[concat(parameters('projectCode'),'-',parameters('projectStage'), '-', parameters('appName'), '-', 'db')]",
                "storageEndpoint": "[concat(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')))]",
                "redisCacheName": "[concat(parameters('projectCode'),'-','redis', '-', parameters('appName'), '-', parameters('projectStage'), '-',parameters('location'))]",
                "projectRg": "[concat(parameters('projectCode'), '-', parameters('projectStage'), '-rg')]",
                "sqlserverResourceId": "[concat(resourceId(variables('projectRg'), 'Microsoft.Sql/servers/', variables('sqlServerName')))]",
                "redisCacheNameResourceId": "[concat(resourceId(variables('projectRg'), 'Microsoft.Cache/Redis/', variables('redisCacheName')))]"

            },
            "resources": [
                {
                    "name": "[variables('hostPlaningName')]",
                    "type": "Microsoft.Web/serverfarms",
                    "apiVersion": "2018-02-01",
                    "location": "[parameters('location')]",
                    "tags": "[union(parameters('resourceTags'),variables('customTag'))]",
                    "sku": {
                        "name": "[parameters('appServiceSkuName')]",
                        "capacity": "[parameters('appServiceSkuCapacity')]"
                    },
                    "properties": {
                        "name": "[variables('hostPlaningName')]"
                    }
                },
                {
                    "name": "[variables('websiteName')]",
                    "type": "Microsoft.Web/sites",
                    "apiVersion": "2018-11-01",
                    "location": "[parameters('location')]",
                    "dependsOn": [
                        "[variables('hostPlaningName')]"
                    ],
                    "tags": "[union(parameters('resourceTags'),variables('customTag'))]",
                    "kind": "app",
                    "properties": {
                        "name": "[variables('websiteName')]",
                        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostPlaningName'))]",
                        "enabled": true,
                        "siteConfig": {
                            "ftpsState": "FtpsOnly",
                            "minTlsVersion": "1.2",
                            "httpLoggingEnabled":true,
                            "netFrameworkVersion": "v4.7",
                            "phpVersion": "7.3",
                            "pythonVersion": "3.6",
                            "connectionStrings": [
                                {
                                    "name": "defaultConn",
                                    "connectionString": "[concat('Data Source=tcp:', reference(variables('sqlserverResourceId'),'2018-06-01-preview').fullyQualifiedDomainName, ',1433;Initial Catalog=', variables('dbName'), ';User Id=', parameters('sqlAdminUser'), '@', reference(variables('sqlserverResourceId'),'2018-06-01-preview').fullyQualifiedDomainName, ';Password=', parameters('sqlAdminPassword'), ';')]",
                                    "type": "SQLAzure"
                                }
                            ],
                            "CacheConnection": "[concat(variables('redisCacheName'),'.redis.cache.windows.net,abortConnect=false,ssl=true,password=', listKeys(variables('redisCacheNameResourceId'), '2015-08-01').primaryKey)]"
                        }
                    }
                }
            ],
            "outputs": {}
        },
        "parameters": {
            "resourceTags": {
                "value": "[parameters('g_resourceTags')]"
            },
            "projectCode": {
                "value": "[parameters('g_projectCode')]"
            },
            "projectStage": {
                "value": "[parameters('g_projectStage')]"
            },
            "appName": {
                "value": "[parameters('g_appName')]"
            },
            "appServiceSkuName": {
                "value": "[parameters('g_appServiceSkuName')]"
            },
            "appServiceSkuCapacity": {
                "value": "[parameters('g_appServiceSkuCapacity')]"
            },
            "sqlAdminUser": {
                "value": "[parameters('g_sqlAdminUser')]"
            },
            "sqlAdminPassword": {
                "value": "[parameters('g_sqlAdminPassword')]"
            }
        },
        "dependsOn": [
            "artifact.storage",
            "artifact.sql",
            "artifact.redis"
        ]
    }
}

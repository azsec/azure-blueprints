{
    "kind": "template",
    "id": "/providers/Microsoft.Blueprint/blueprints/azsec_foundation/artifacts/redis_blueprint",
    "type": "Microsoft.Blueprint/blueprints/artifacts",
    "name": "redis_blueprint",
    "properties": {
        "resourceGroup": "projectResourceGroup",
        "displayName": "Azure Redis Cache service template",
        "description": "A artifact to deploy Azure Redis Cache service",
        "template": {
            "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
            "contentVersion": "1.0.0.0",
            "parameters": {
                "resourceTags": {
                    "type": "object",
                    "defaultValue": {
                        "CostCenter": "",
                        "Owner": ""
                    },
                    "metadata": {
                        "displayName": "Global resource tag that follows Azure governance"
                    }
                },
                "projectCode": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 5,
                    "metadata": {
                        "displayName": "Project Code (e.g. AGS), must be unique"
                    }
                },
                "projectStage": {
                    "type": "string",
                    "minLength": 3,
                    "maxLength": 5,
                    "defaultValue": "dev",
                    "allowedValues": [
                        "prod",
                        "dev",
                        "test",
                        "uat"
                    ],
                    "metadata": {
                        "displayName": "Project Stage",
                        "description": "Specify project stage"
                    }
                },
                "location": {
                    "type": "string",
                    "defaultValue": "[resourceGroup().location]",
                    "metadata": {
                        "displayName": "Location for all resources."
                    }
                },
                "appName": {
                    "type": "string",
                    "metadata": {
                        "description": "The name of your Web App"
                    }
                },
                "redisCacheSku": {
                    "type": "string",
                    "allowedValues": [
                        "Basic",
                        "Standard",
                        "Premium"
                    ],
                    "metadata": {
                        "displayName": "Azure Redis Cache SKU",
                        "description": "Specify SKU for Azure Redis Cache"
                    }
                },
                "redisCacheFamily": {
                    "type": "string",
                    "allowedValues": [
                        "C",
                        "P"
                    ],
                    "metadata": {
                        "displayName": "Redis Cache Family"
                    }
                },
                "redisCacheCapacity": {
                    "type": "int",
                    "allowedValues": [
                        0,
                        1,
                        2,
                        3,
                        4,
                        5,
                        6
                    ],
                    "metadata": {
                        "displayName": "Redis Cache Capacity",
                        "description": "Specify Redis Cache capacity"
                    }
                },
                "enableNonSslPort": {
                    "type": "bool",
                    "allowedValues": [
                        false
                    ],
                    "metadata": {
                        "displayName": "SSL Enforcement",
                        "description": "Enforce SSL for Redis Cache"
                    }
               }
            },
            "variables": {
                "customTag": {
                    "ProjectCode": "[parameters('projectCode')]",
                    "Environemnt": "[parameters('projectStage')]"
                },
                "redisCacheName": "[concat(parameters('projectCode'),'-','redis', '-', parameters('appName'), '-', parameters('projectStage'), '-',parameters('location'))]"
            },
            "resources": [
                {
                    "apiVersion": "2018-03-01",
                    "name": "[variables('redisCacheName')]",
                    "type": "Microsoft.Cache/Redis",
                    "location": "[resourceGroup().location]",
                    "tags": "[union(parameters('resourceTags'),variables('customTag'))]",
                    "properties": {
                        "enableNonSslPort": "[parameters('enableNonSslPort')]",
                        "sku": {
                            "capacity": "[parameters('redisCacheCapacity')]",
                            "family": "[parameters('redisCacheFamily')]",
                            "name": "[parameters('redisCacheSKU')]"
                          }
                    }
                }
            ],
            "outputs": {

            }
        },
        "parameters": {
            "resourceTags": {
                "value": "[parameters('g_resourceTags')]"
            },
            "projectCode": {
                "value": "[parameters('g_projectCode')]"
            },
            "projectStage": {
                "value": "[parameters('g_projectStage')]"
            },
            "appName": {
                "value": "[parameters('g_appName')]"
            },
            "redisCacheSku": {
                "value": "[parameters('g_redisCacheSku')]"
            },
            "redisCacheFamily": {
                "value": "[parameters('g_redisCacheFamily')]"
            },
            "redisCacheCapacity": {
                "value": "[parameters('g_redisCacheCapacity')]"
            },
            "enableNonSslPort": {
                "value":"[parameters('g_enableNonSslPort')]"
           }
        },
        "dependsOn": [
            "artifact.storage",
            "artifact.sql"
        ]
    }
}